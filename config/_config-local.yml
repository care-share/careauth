# Example careauth configuration file

################################################################################
# Web settings
################################################################################

# External TCP port to listen on for client connections
# default = 3000
port: 3000

################################################################################
# Database settings
################################################################################

# MongoDB database url
db:
    production: "mongodb://localhost/careauth_production_db"
    test: "mongodb://localhost/careauth_test_db"

################################################################################
# Authentication settings
################################################################################

# Millis conversions cheat sheet:
# 1 second: 1000
# 1 minute: 60000
# 10 minutes: 600000
# 30 minutes: 1800000
# 1 hour: 3600000
# 12 hours: 43200000
# 24 hours: 86400000
# 1 week: 604800000

# Length of time, in milliseconds, that tokens are valid
# default = 3600000
jwt_ttl: 3600000

# Secret for encoding JSON Web Tokens (JWTs)
jwt_secret: 'TOKENsecretHERE'

# Signing algorithm for login tokens
# Must be one of the RSA or ECDSA options listed here:
# https://github.com/auth0/node-jsonwebtoken#algorithms-supported
jwt_signing_alg: "ES512"

################################################################################
# Logging options
################################################################################

# Log file path
log_file: 'server.log'

# Log level to use, omits lower log levels
# Levels, lowest to highest: silly, debug, verbose, info, warn, error
# default = 'info'
log_level: 'info'

################################################################################
# Miscellaneous settings
################################################################################

# Name of admin user to be generated by "create-admin" script
admin_user: 'admin@mitre.org'

# Password of admin to be generated by "create-admin" script
# Leaving this blank will generate a random password
#admin_password: 'passw0rd'
